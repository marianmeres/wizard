"use strict";const e=e=>"function"==typeof e,t=(t,r="")=>{if(!e(t))throw new TypeError(`${r} Expecting function arg`.trim())};exports.createWizardStore=(r,n)=>{let{steps:a,context:s,preReset:o}={steps:[],context:{},preReset:()=>null,...n||{}};if(!Array.isArray(a)||a.length<2)throw new TypeError(`${r}: expecting array of at least 2 steps configs.`);const c=(e,t)=>"function"==typeof e[t]?e[t]:()=>!0;let i=0;const u=a.length-1;let p=[];const l=()=>({steps:a,step:a[i],context:s}),x=(e=null)=>{const{data:t,error:r,canGoNext:n}=e||{};void 0!==t&&(a[i].data=t),void 0!==r&&(a[i].error=r),void 0!==n&&(a[i].canGoNext=!!n),void 0!==e?.context&&(s=e.context),a=[...a],N.set(l())},d=e=>x({data:e}),f=e=>x({error:e}),b=e=>x({context:e}),h=e=>x({canGoNext:e}),w=async(e=null)=>(y.isDone()||(a[i].data={...p[i],...a[i].data||{},...e||{}},a[i].error=null,await a[i].preNext(a[i].data,{context:s,wizard:y,setData:d,setError:f,setContext:b,setCanGoNext:h,touch:x}),a[i].canGoNext?(i=Math.min(u,i+1),a[i].error=null):a[i].error||="Cannot proceed. Check your step state and/or `canGoNext` flag.",x()),i),g=async()=>(await a[i].prePrevious(a[i].data,{context:s,wizard:y,setData:d,setError:f,setContext:b,setCanGoNext:h,touch:x}),i=Math.max(0,i-1),x(),i);a=a.map(((e,t)=>{const r=e.data||{};return p[t]=(e=>JSON.parse(JSON.stringify(e)))(r),{...e,label:e.label||`${t+1}`,index:t,data:r,canGoNext:void 0===e.canGoNext||!!e.canGoNext,error:null,isFirst:0===t,isLast:t===u,preNext:c(e,"preNext"),prePrevious:c(e,"prePrevious"),preReset:c(e,"preReset"),setData:d,setError:f,setContext:b,setCanGoNext:h,touch:x,next:w,previous:g}}));const N=((r=undefined,n=null)=>{const a=t=>e(n?.persist)&&n.persist(t);let s=(()=>{const e=new Map,t=t=>(e.has(t)||e.set(t,new Set),e.get(t)),r=(e,r)=>{if("function"!=typeof r)throw new TypeError("Expecting callback function as second argument");return t(e).add(r),()=>t(e).delete(r)};return{publish:(e,r={})=>{t(e).forEach((e=>e(r)))},subscribe:r,subscribeOnce:(e,t)=>{const n=r(e,(e=>{t(e),n()}));return n},unsubscribeAll:t=>e.delete(t)}})(),o=r;a(o);const c=()=>o,i=e=>{o!==e&&(o=e,a(o),s.publish("change",o))};return{set:i,get:c,update:e=>{t(e,"[update]"),i(e(c()))},subscribe:e=>(t(e,"[subscribe]"),e(o),s.subscribe("change",e))}})(l()),y={get:N.get,subscribe:N.subscribe,next:w,previous:g,reset:async()=>{for(let e=i;e>=0;e--)i=e,await a[i].preReset(a[i].data,{context:s,wizard:y,setData:d,setError:f,setContext:b,setCanGoNext:h,touch:x});return await o({context:s,wizard:y}),p.forEach(((e,t)=>a[t].data=e)),x(),i},goto:async(e,t=[])=>{if(e<0||e>u)return`Invalid step index ${e}`;if(e!==i){if(e<i)for(let t=i;t>e;t--)await g();else for(let r=i;r<=e;r++)if(await w(t[r]),a[r].error)return r;return i}},isDone:()=>i===u};return y};
